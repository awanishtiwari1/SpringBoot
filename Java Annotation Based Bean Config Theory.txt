Objective: 

To understand how to define configuration metadata using Java-Annotation based configuration and use ApplicationContext

Steps:

Step 1: Create a new Maven project using Eclipse.

Step 2: Add the following Spring dependency in pom.xml:

  	<dependencies>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>6.0.10</version>
		</dependency>
	</dependencies>
	
	<properties>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.source>21</maven.compiler.source>
	</properties>
Step 3: Create the following Spring bean in com.infy.bean package:

package com.infy.bean;
import org.springframework.stereotype.Component;
@Component
public class WelcomeBean {
	public String printWelcome() {
		return "Welcome to Spring";
	}
}

Step 4: Create the following configuration file in com.infy.configuration package:

package com.infy.configuration;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
@Configuration
@ComponentScan(basePackages = "com.infy.bean")
public class SpringConfig {
    
}

Step 5:  Create the following UserInterface class in com.infy.ui package with the main method and instantiate the Spring container using configuration class you created in the previous step as the constructor argument. Retrieve the WelcomeBean via getBean() method and use it.

package com.infy.ui;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;
import com.infy.bean.WelcomeBean;
import com.infy.configuration.SpringConfig;
public class UserInterface {
	
	public static final Log LOGGER = LogFactory.getLog(UserInterface.class); 
	public static void main(String[] args) {
		ApplicationContext applicationContext = new AnnotationConfigApplicationContext(SpringConfig.class);
		WelcomeBean welcomeBean = (WelcomeBean) applicationContext.getBean(WelcomeBean.class);
		LOGGER.info(welcomeBean.printWelcome());
	}
}

Step 6: Run the UserInterface class created in the previous step. You will get the following output: 

​​​​​​​



You can download this demo from  Demo_Java_Annotation_Configuration.zip

 

 